# This file configures the analyzer, which statically analyzes Dart code to
# check for errors, warnings, and lints.


analyzer:

  exclude:
    - "**/*.g.dart"
    - "**/*.gen.dart"
    - "**/*.mock.dart"
    - "**/*.freezed.dart"
    - "*/firebase_options.dart"



include: package:very_good_analysis/analysis_options.yaml



linter:

  rules:
    avoid_print: false  # Uncomment to disable the `avoid_print` rule
    always_declare_return_types: true
    always_use_package_imports: false
    annotate_overrides: true
    avoid_bool_literals_in_conditional_expressions: true
    avoid_catching_errors: true
    avoid_double_and_int_checks: true
    avoid_dynamic_calls: true
    avoid_empty_else: true
    avoid_equals_and_hash_code_on_mutable_classes: true
    avoid_escaping_inner_quotes: true
    avoid_field_initializers_in_const_classes: true
    avoid_final_parameters: true
    avoid_function_literals_in_foreach_calls: true
    avoid_init_to_null: true
    avoid_js_rounded_ints: true
    avoid_multiple_declarations_per_line: true
    avoid_null_checks_in_equality_operators: true
    avoid_positional_boolean_parameters: true
    avoid_private_typedef_functions: true
    avoid_redundant_argument_values: true
    avoid_relative_lib_imports: true
    avoid_renaming_method_parameters: true
    avoid_return_types_on_setters: true
    avoid_returning_null: true
    avoid_returning_null_for_future: true
    avoid_returning_null_for_void: true
    avoid_returning_this: true
    avoid_setters_without_getters: true
    avoid_shadowing_type_parameters: true
    avoid_single_cascade_in_expression_statements: true
    avoid_slow_async_io: true
    avoid_type_to_string: true
    avoid_types_as_parameter_names: true
    avoid_unnecessary_containers: true
    avoid_unused_constructor_parameters: true
    await_only_futures: true
    camel_case_types: true
    cancel_subscriptions: true
    cascade_invocations: true
    cast_nullable_to_non_nullable: true
    comment_references: true
    conditional_uri_does_not_exist: true
    constant_identifier_names: true
    control_flow_in_finally: true
    curly_braces_in_flow_control_structures: true
    depend_on_referenced_packages: true
    deprecated_consistency: true
    hash_and_equals: true
    library_names: true
    lines_longer_than_80_chars: false
    prefer_asserts_in_initializer_lists: true
    prefer_asserts_with_message: true
    prefer_collection_literals: true
    prefer_conditional_assignment: true
    prefer_const_constructors: true
    prefer_const_constructors_in_immutables: true
    prefer_const_declarations: true
    prefer_const_literals_to_create_immutables: true
    prefer_contains: true
    prefer_final_fields: true
    prefer_final_locals: true
    prefer_for_elements_to_map_fromIterable: true
    prefer_if_null_operators: true
    prefer_is_empty: true
    prefer_is_not_empty: true
    prefer_is_not_operator: true
    prefer_iterable_whereType: true
    prefer_null_aware_method_calls: true
    prefer_null_aware_operators: true
    prefer_single_quotes: false
    prefer_spread_collections: true
    sized_box_for_whitespace: true
    sized_box_shrink_expand: true
    sort_pub_dependencies: false
    type_init_formals: true
    use_build_context_synchronously: true
    use_colored_box: true
    use_decorated_box: true
    use_enums: true
    use_full_hex_values_for_flutter_colors: true
    use_function_type_syntax_for_parameters: true
    use_key_in_widget_constructors: true
    use_late_for_private_fields_and_variables: true
    use_named_constants: true
    use_rethrow_when_possible: true
    use_string_buffers: true
    use_super_parameters: false
    use_test_throws_matchers: true
    use_to_and_as_if_applicable: true
    valid_regexps: true
